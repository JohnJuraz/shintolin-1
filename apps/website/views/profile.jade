extends ./_page.jade

mixin profile_date(date, label)
  div
    label #{label}
    p(title='#{moment(date).format("MMM Do, YYYY H:mm A")}') #{moment(date).fromNow()}

block content
  .jumbotron
    .container
      .row
        .col-xs-12
          h1
            - var title = data.badges[character.title];
            if title && title.title_placement === 'prefix'
              | #{data.badges[character.title].title}#{character.name}
            else if title && (!title.title_placement || title.title_placement === 'suffix')
              | #{character.name}#{data.badges[character.title].title}
            else
              | #{character.name}
          if character.settlement_id
            h2
              | from
              |  
              a(href='/settlements/#{character.settlement_slug}') #{character.settlement_name}

  .container
    .row
      .col-xs-12

        if editable || is_developer
          ul.nav.nav-tabs(role='tablist')
            li.active(role='presentation'): a(href='#profile', aria-controls='profile', role='tab', data-toggle='tab') Profile
            li(role='presentation'): a(href='#edit-profile', aria-controls='edit-profile', role='tab', data-toggle='tab') Edit Profile
            if is_developer
              li(role='presentation'): a(href='#developer', aria-controls='developer', role='tab', data-toggle='tab') Developer Tools

        .tab-content(class={'profile-read-only': (!editable && !is_developer)})
          #profile.tab-pane.active(role='tabpanel')
            include ./profile-view
          if editable || is_developer
            #edit-profile.tab-pane(role='tabpanel')
              include ./profile-edit
          if is_developer
            #developer.tab-pane(role='tabpanel')
              h2.page-title Developer Tools
              div
                label Email Address
                p: a(href="mailto:#{character.email}") #{character.email}
              div
                label Played For
                p #{moment.duration(moment(character.last_action).diff(character.created)).humanize()}
              +profile_date(character.last_action, 'Last Active')

              form(method='POST', action='/game/dev/possess')
                input(type='hidden', name='_csrf', value=csrf)
                input(type='hidden', name='target_name', value=character.name)
                button.btn.btn-default(type='submit') Possess

              form(method='POST', action='/game/dev/teleport-to-character')
                input(type='hidden', name='_csrf', value=csrf)
                input(type='hidden', name='target_name', value=character.name)
                button.btn.btn-default(type='submit') Teleport To

              if character.banned
                form(method='POST', action='/game/dev/unban/#{character.slug}')
                  input(type='hidden', name='_csrf', value=csrf)
                  button.btn.btn-warning(type='submit') Unban
              else
                form(method='POST', action='/game/dev/ban/#{character.slug}')
                  input(type='hidden', name='_csrf', value=csrf)
                  button.btn.btn-warning(type='submit') Ban

              form(method='POST', action='/game/dev/remove-player/#{character.slug}')
                input(type='hidden', name='_csrf', value=csrf)
                button.btn.btn-danger(type='submit') Delete

              table.hits
                thead
                  tr
                    th Date
                    th IP
                    th Hits
                for hit in hits
                  tr
                    td #{hit.date}
                    td: a(href="/ip/#{hit.ip}") #{hit.ip}
                    td #{hit.hits}
